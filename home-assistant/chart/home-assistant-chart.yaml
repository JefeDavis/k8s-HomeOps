---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home-assistant
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://helm.samipsolutions.fi/
      chart: home-assistant
      version: v13.6.0
      sourceRef:
        kind: HelmRepository
        name: samipsolutions-charts
        namespace: flux-system
      interval: 5m
  upgrade:
    crds: CreateReplace
  values:
    env:
      TZ: "America/New York"
    dnsPolicy: ClusterFirstWithHostNet
    ingress:
      # internal:
      #   enabled: true
      #   annotations:
      #     nginx.org/websocket-services: home-assistant
      #     cert-manager.io/cluster-issuer: davishaus-lab-issuer
      #   ingressClassName: nginx
      #   hosts:
      #     - host: home.davishaus.lab
      #       paths:
      #         - path: /
      #   tls:
      #     - hosts:
      #         - home.davishaus.lab
      #       secretName: home-assistant-tls-internal
      external:
        enabled: true
        hostNetwork: true
        annotations:
          nginx.org/websocket-services: home-assistant
          cert-manager.io/cluster-issuer: letsencrypt-prod
        ingressClassName: nginx
        hosts:
          - host: home.davishaus.dev
            paths:
              - path: /
        tls:
          - hosts:
              - home.davishaus.dev
            secretName: home-assistant-tls-external
    persistence:
      config:
        enabled: true
        storageClass: "nfs-client"
        accessMode: ReadWriteOnce
        size: 10Gi
      zigbee:
        enabled: true
        type: hostPath
        hostPath: /dev/ttyUSB0
      zwave:
        enabled: true
        type: hostPath
        hostPath: /dev/ttyUSB1
      # configuration:
      #   enabled: true
      #   type: configMap
      #   name: home-assistant-configuration
      #   mountPath: /config/configuration.yaml
      #   subPath: configuration.yaml
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: true
      readOnlyRootFilesystem: false
      runAsNonRoot: false
    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
              - key: feature.kubernetes.io/zwave
                operator: In
                values:
                  - "true"
              - key: feature.kubernetes.io/zigbee
                operator: In
                values:
                  - "true"
    postgresql:
      enabled: true
      auth:
        enablePostgresUser: false
        username: home-assistant
        database: home-assistant
      postgressqlDataDir: "/data/pgdata"
      shmVolume:
        enabled: false
      volumePermissions:
        enabled: false
      primary:
        persistence:
          enabled: true
          storageClass: "nfs-client"
          size: 10Gi
          mountPath: "/data/"
    # configmap:
    #   configuration:
    #     enabled: true
    #     data:
    #       configuration.yaml: |
    #         homeassistant:
    #           packages: !include_dir_named packages

    #         default_config:
            
    #         # Text to speech
    #         tts:
    #           - platform: google_translate

    #         http:
    #           server_host: 0.0.0.0
    #           ip_ban_enabled: true
    #           login_attempts_threshold: 5
    #           use_x_forwarded_for: true
    #           trusted_proxies:
    #           # Pod CIDR
    #           - 10.42.0.0/22
    #           # Node CIDR
    #           - 10.77.1.0/24
            
    #         automation: !include automations.yaml
    #         script: !include scripts.yaml
    #         scene: !include scenes.yaml

    #         withings:
    #           use_webhook: true

    addons:
      codeserver:
        enabled: true
        workingDir: "/config"
        args:
          - "--user-data-dir"
          - "/config/.vscode"
          - --auth
          - "none"
        ingress:
          enabled: true
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-prod
            nginx.ingress.kubernetes.io/auth-url: "https://auth.davishaus.dev/oauth2/auth"
            nginx.ingress.kubernetes.io/auth-signin: "https://auth.davishaus.dev/oauth2/start"
          hosts:
            - host: hass-vscode.davishaus.dev
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - hosts:
              - hass-vscode.davishaus.dev
              secretName: hass-vscode-tls-external
        volumeMounts:
          - name: config
            mountPath: /config
