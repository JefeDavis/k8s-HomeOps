---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home-assistant
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://helm.samipsolutions.fi/
      chart: home-assistant
      version: 16.0.1
      sourceRef:
        kind: HelmRepository
        name: samipsolutions-charts
        namespace: flux-system
      interval: 5m
  upgrade:
    crds: CreateReplace
  values:
    image:
      repository: ghcr.io/home-assistant/home-assistant
      tag: 2022.11.5
    env:
      TZ: "America/New York"
    dnsPolicy: ClusterFirstWithHostNet
    hostNetwork: true
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: "10.77.1.133"
        ports:
          http:
            port: 8123
          sonos:
            enabled: true
            port: 1400
          mass:
            enabled: true
            port: 8095
    ingress:
      external:
        enabled: true
        annotations:
          nginx.org/websocket-services: home-assistant
          cert-manager.io/cluster-issuer: letsencrypt-prod
          # nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          # nginx.ingress.kubernetes.io/auth-signin: https://home.davishaus.dev/outpost.goauthentik.io/start?rd=$escaped_request_uri
          # nginx.ingress.kubernetes.io/auth-snippet: |
          #   proxy_set_header X-Forwarded-Host $http_host;
          # nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-davishaus.auth.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx

        ingressClassName: nginx
        hosts:
          - host: home.davishaus.dev
            paths:
              - path: /
        tls:
          - hosts:
              - home.davishaus.dev
            secretName: home-assistant-tls-external
    metrics:
      enabled: true
      serviceMonitor:
        bearerTokenSecret:
          name: home-assistant-token
          key: token
    persistence:
      config:
        enabled: true
        storageClass: "synology-csi-retain"
        accessMode: ReadWriteOnce
        size: 10Gi
      # zigbee:
      #   enabled: true
      #   type: hostPath
      #   hostPath: /dev/ttyUSB0
      # zwave:
      #   enabled: true
      #   type: hostPath
      #   hostPath: /dev/ttyUSB1
      # configuration:
      #   enabled: true
      #   type: configMap
      #   name: home-assistant-configuration
      #   mountPath: /config/configuration.yaml
      #   subPath: configuration.yaml
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: true
      readOnlyRootFilesystem: false
      runAsNonRoot: false
    probes:
      liveness:
        custom: true
        spec:
          httpGet:
            path: /manifest.json
            port: 8123
          initialDelaySeconds: 3
          periodSeconds: 3
      readiness:
        enabled: false
      startup:
        enabled: false
    # affinity:
    #   nodeAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       nodeSelectorTerms:
    #         - matchExpressions:
    #           - key: feature.node.kubernetes.io/custom-zwave
    #             operator: In
    #             values:
    #               - "true"
    #           - key: feature.node.kubernetes.io/custom-zigbee
    #             operator: In
    #             values:
    #               - "true"
    postgresql:
      enabled: true
      auth:
        enablePostgresUser: false
        username: home-assistant
        database: home-assistant
      postgressqlDataDir: "/data/pgdata"
      shmVolume:
        enabled: false
      volumePermissions:
        enabled: false
      primary:
        persistence:
          enabled: true
          storageClass: "synology-csi-retain"
          size: 10Gi
          mountPath: "/data/"
    addons:
      codeserver:
        enabled: true
        workingDir: "/config"
        args:
          - "--user-data-dir"
          - "/config/.vscode"
          - --auth
          - "none"
        ingress:
          enabled: true
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-prod
            nginx.ingress.kubernetes.io/auth-url: |-
              http://ak-outpost-davishaus.auth.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
            # If you're using domain-level auth, use the authentication URL instead of the application URL
            nginx.ingress.kubernetes.io/auth-signin: |-
                https://hass-vscode.davishaus.dev/outpost.goauthentik.io/start?rd=$escaped_request_uri
            nginx.ingress.kubernetes.io/auth-response-headers: |-
                Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
            nginx.ingress.kubernetes.io/auth-snippet: |
                proxy_set_header X-Forwarded-Host $http_host;
          hosts:
            - host: hass-vscode.davishaus.dev
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - hosts:
              - hass-vscode.davishaus.dev
              secretName: hass-vscode-tls-external
        volumeMounts:
          - name: config
            mountPath: /config
