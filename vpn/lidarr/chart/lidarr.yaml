apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: lidarr
  namespace: vpn 
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: lidarr
      version: 14.2.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: ghcr.io/k8s-at-home/lidarr
      tag: v1.0.2.2592
    env:
      TZ: "America/New York"
      LIDARR__INSTANCE_NAME: Lidarr
      LIDARR__PORT: &port 9696
      LIDARR__LOG_LEVEL: info
      LIDARR__ANALYTICS_ENABLED: "False"
      LIDARR__APPLICATION_URL: "https://lidarr.davishaus.dev"
      LIDARR__API_KEY:
        valueFrom:
          secretKeyRef:
            name: starr-apps-secret
            key: LIDARR_API_KEY

    ingress:
      main:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          nginx.ingress.kubernetes.io/auth-url: "https://auth.davishaus.dev/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: https://auth.davishaus.dev/oauth2/start
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.davishaus.dev/css/base/lidarr/nord.css"></head>';
            sub_filter_once on;
        hosts:
        - host: "lidarr.davishaus.dev"
          paths:
          - path: /
            pathType: Prefix
        tls:
        - hosts:
          - "lidarr.davishaus.dev"
          secretName: lidarr-tls-external
    persistence:
      config:
        enabled: true
        storageClass: "synology-csi-retain"
        size: 3Gi
      media:
        enabled: true
        existingClaim: nfs-vpn-media-pvc
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 65539
    resources:
      requests:
        memory: 350Mi
        cpu: 25m
      limits:
        memory: 500Mi
    tolerations:
    - key: "arm"
      operator: "Exists"
    prometheus:
      podMonitor:
        enabled: true
        interval: 10m
        scrapeTimeout: 2s

