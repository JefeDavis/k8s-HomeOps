---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: flood
  namespace: vpn
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: flood
      version: 6.4.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: jesec/flood
      tag: 4.7.0
    env:
      FLOOD_OPTION_RUNDIR: /config
      FLOOD_OPTION_AUTH: "none"
      FLOOD_OPTION_RTSOCKET: "/tmp/rtorrent.sock"

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          nginx.ingress.kubernetes.io/auth-url: "https://auth.davishaus.dev/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: https://auth.davishaus.dev/oauth2/start
        hosts:
        - host: f.davishaus.dev
          paths:
          - path: /
            pathType: Prefix
        tls:
        - hosts:
          - "f.davishaus.dev"
          secretName: flood-tls-external

    persistence:
      data:
        enabled: true
        existingClaim: nfs-vpn-downloads-pvc
        accessMode: ReadWriteMany
        size: "1Gi"
      config:
        enabled: true
        size: 1Gi
        storageClass: synology-csi-retain
      socket:
        enabled: true
        type: emptyDir
        # medium: Memory
        mountPath: /tmp

    probes:
      liveness:
        enabled: true
        initialDelaySeconds: 30
        failureThreshold: 5
        timeoutSeconds: 10
      readiness:
        enabled: true
        initialDelaySeconds: 30
        failureThreshold: 5
        timeoutSeconds: 10
      startup:
        enabled: true
        initialDelaySeconds: 5
        failureThreshold: 30
        periodSeconds: 10

    podAnnotations:
      backup.velero.io/backup-volumes: config

    resources:
      requests:
        memory: 50Mi
        cpu: 50m
      limits:
        memory: 640Mi


    additionalContainers:
      - name: rtorrent
        # image: billimek/alpine-rtorrent:0.9.8-1
        image: billimek/rtorrent:latest
        env:
        - name: PUID
          value: "1001"
        - name: PGID
          value: "1001"
        livenessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: bt
          timeoutSeconds: 1
        ports:
        - name: bt
          containerPort: 49161
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: bt
          timeoutSeconds: 1
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 200Mi
        startupProbe:
          failureThreshold: 60
          periodSeconds: 10
          initialDelaySeconds: 5
          successThreshold: 1
          tcpSocket:
            port: bt
          timeoutSeconds: 1
        tty: true
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /data
          name: data
        - mountPath: /session
          name: data
          subPath: .session
        - mountPath: /watch
          name: data
          subPath: watch
        - mountPath: /download
          name: data
          subPath: torrents
        - mountPath: /socket
          name: socket

    # additionalVolumes:
    #   - emptyDir: {}
    #     name: socket

    service:
      bt:
        enabled: true
        type: LoadBalancer
        loadBalancerIP: 10.77.1.135
        ports:
          bt:
            enabled: true
            port: 49161
            protocol: TCP
            targetPort: 49161
