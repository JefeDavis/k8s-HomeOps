---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitor
spec:
  interval: 15m
  chart:
    spec:
      chart: grafana
      version: 6.57.0
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  values:
    replicas: 3

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            disableDeletion: false
            editable: true
            folder: ""
            options:
              path: /var/lib/grafana/dashboards/default
            orgId: 1
            type: file
          - name: node-exporter
            disableDeletion: false
            editable: true
            folder: "node-exporter"
            options:
              path: /var/lib/grafana/dashboards/node-exporter
            orgId: 1
            type: file
          - name: unpoller
            disableDeletion: false
            editable: true
            folder: "UniFi Poller"
            options:
              path: /var/lib/grafana/dashboards/unpoller
            orgId: 1
            type: file

    dashboards:
      node-exporter:
        # Ref: https://grafana.com/grafana/dashboards/1860-node-exporter-full/
        node-exporter:
          gnetId: 1860
          revision: 30
          datasource: Prometheus

    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - name: Loki
            orgId: 1
          - name: Alertmanager
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query.monitor.svc.cluster.local:9090
            isDefault: true
          - name: Loki
            access: proxy
            type: loki
            url: http://loki-gateway.monitor.svc.cluster.local:80
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://alert-manager.monitor.svc.cluster.local:9093
            jsonData:
              implementation: prometheus

    deploymentStrategy:
      type: Recreate

    env:
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_LOG_FILTERS: rendering:debug
      GF_PANELS_DISABLE_SANATIZE_HTML: true
      GF_SECURITY_COOKIE_SAMESITE: grafana
      GF_DATABASE_HOST: pg-grafana-rw:5432
      GF_DATABASE_TYPE: postgres
      GF_DATABASE_SSL_MODE: disable

    envFromSecrets:
      - name: grafana-secret

    envValueFrom: 
      GF_DATABASE_NAME:
        secretKeyRef:
          name: pg-grafana-app
          key: username
      GF_DATABASE_USER:
        secretKeyRef:
          name: pg-grafana-app
          key: username
      GF_DATABASE_PASSWORD:
        secretKeyRef:
          name: pg-grafana-app
          key: password

    grafana.ini:
      analytics:
        check_for_updates: false
      auth:
        oauth_auto_login: true
      auth.generic_oauth:
        enabled: true
        name: Authentik
        icon: signin
        scopes: openid profile email
        empty_scopes: false
        use_pkce: true
      auth.generic_oauth.group_mapping:
        org_id: 1
        role_attribute_path: |
          contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'
      auth.basic:
        enabled: false
      auth.anonymous:
        enabled: false
      paths:
        data: /var/lib/grafana/data
      server:
        root_url: https://grafana.${EXTERNAL_DOMAIN}

    imageRenderer:
      enabled: true
      serviceMonitor:
        enabled: true

    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        hajimari.io/enable: "true"
        hajimari.io/icon: "simple-icons:grafana"
      hosts:
        - &host grafana.${EXTERNAL_DOMAIN}
        - monitor.${EXTERNAL_DOMAIN}
      tls:
        - hosts:
            - *host
            - monitor.${EXTERNAL_DOMAIN}
          secretName: grafana-tls-external

    persistence:
      enabled: false

    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel

    podAnnotations:
      configmap.reloader.stakater.com/reload: grafana
      secret.reloader.stakater.com/reload: grafana-secrets

    resources:
      limits:
        memory: 219Mi
      requests:
        cpu: 23m
        memory: 127Mi

    serviceMonitor:
      enabled: true

    sidecar:
      logLevel: INFO
      alerts:
        enabled: true
        label: grafana.io/alert
        labelValue: "true"
      dashboards:
        enabled: true
        label: grafana.io/dashboard
        labelValue: "true"
        folderAnnotation: "grafana.io/folder"
        searchNamespace: ALL
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        label: grafana.io/datasource
        labelValue: "true"
        searchNamespace: ALL
      notifiers:
        enabled: true
        label: grafana.io/notifier
        labelValue: "true"
        searchNamespace: ALL
      plugins:
        enabled: true
        label: grafana.io/plugin
        labelValue: "true"
        searchNamespace: ALL

    topologySpreadConstraints:
      - maxSkew: 2
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: grafana
