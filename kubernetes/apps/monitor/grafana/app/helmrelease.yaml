---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitor
spec:
  interval: 15m
  chart:
    spec:
      chart: grafana
      version: 6.56.6
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    replicas: 3
    env:
      GF_AUTH_GENERIC_OAUTH_API_URL: "https://auth.${EXTERNAL_DOMAIN}/application/o/userinfo/"
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://auth.${EXTERNAL_DOMAIN}/application/o/authorize/"
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: grafana
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://auth.${EXTERNAL_DOMAIN}/application/o/token/"
      GF_AUTH_SIGNOUT_REDIRECT_URL: "https://auth.${EXTERNAL_DOMAIN}/application/o/grafana/end-session/"
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_FEATURE_TOGGLES_ENABLE: publicDashboards
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_COOKIE_SAMESITE: grafana
      GF_SERVER_ROOT_URL: https://grafana.${EXTERNAL_DOMAIN}
      GF_DATABASE_HOST: pg-grafana-rw:5432
      GF_DATABASE_TYPE: postgres
      GF_DATABASE_SSL_MODE: disable
    envFromSecrets:
      - name: grafana-secret
    envValueFrom: 
      GF_DATABASE_NAME:
        secretKeyRef:
          name: pg-grafana-app
          key: username
      GF_DATABASE_USER:
        secretKeyRef:
          name: pg-grafana-app
          key: username
      GF_DATABASE_PASSWORD:
        secretKeyRef:
          name: pg-grafana-app
          key: password
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
      auth:
        oauth_auto_login: true
      auth.generic_oauth:
        enabled: true
        name: Authentik
        icon: signin
        scopes: openid profile email
        empty_scopes: false
        login_attribute_path: preferred_username
        groups_attribute_path: groups
        name_attribute_path: name
        use_pkce: true
      auth.generic_oauth.group_mapping:
        org_id: 1
        role_attribute_path: |
          contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'
      auth.basic:
        enabled: false
      auth.anonymous:
        enabled: false
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - name: Loki
            orgId: 1
          - name: Alertmanager
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://kube-prometheus-stack-prometheus.monitor.svc.cluster.local:9090
            isDefault: true
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://kube-prometheus-stack-alertmanager.monitor.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
    dashboards:
      default:
        # Ref: https://grafana.com/grafana/dashboards/11312-unifi-poller-usw-insights-prometheus/
        unifi-usw:
          gnetId: 11312
          revision: 9
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/1860-node-exporter-full/
        node-exporter-full:
          gnetId: 1860
          revision: 30
          datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/logs.json
          datasource: Prometheus
        kubernetes-api-server:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
          datasource: Prometheus
        kubernetes-coredns:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
          datasource: Prometheus
        kubernetes-global:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
          datasource: Prometheus
        kubernetes-namespaces:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
          datasource: Prometheus
        kubernetes-nodes:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
          datasource: Prometheus
        kubernetes-pods:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
          datasource: Prometheus
        kyverno:
          url: https://raw.githubusercontent.com/kyverno/grafana-dashboard/master/grafana/dashboard.json
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        hajimari.io/enable: "true"
        hajimari.io/icon: "simple-icons:grafana"
      hosts:
        - &host grafana.${EXTERNAL_DOMAIN}
        - monitor.${EXTERNAL_DOMAIN}
      tls:
        - hosts:
            - *host
            - monitor.${EXTERNAL_DOMAIN}
          secretName: grafana-tls-external
    persistence:
      enabled: false
    testFramework:
      enabled: false
    topologySpreadConstraints:
      - maxSkew: 2
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: grafana
