apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: copy-talos-schematic-labels-to-pod
  annotations:
    pod-policies.kyverno.io/autogen-controllers: none
    policies.kyverno.io/title: Copy Talos Schematic Labels to Pod
    policies.kyverno.io/category: Other
    policies.kyverno.io/subject: Pod
    kyverno.io/kyverno-version: 1.11.4
    policies.kyverno.io/minversion: 1.10.0
    kyverno.io/kubernetes-version: "1.29.0"
    policies.kyverno.io/description: >-
      The Talos Upgrade plan invoked by System-Upgrade-Controller has been configured
      to allow heterogenous node updates, in doing so we need to be able to pass the upgrade
      pod what schematic id to use for upgrading each node. The way we accomplish this is 
      by defining Node Labels detailing the Schematic ID that Node needs to use.
      This Policy then mirrors those labels to the upgrade pod at pod binding.
      Scheduling decisions are made by kube-scheduler after the Pod has been persisted
      and so only at that time may the Node to which the Pod is bound can be fetched.
      The Kubernetes API allows specifically the projection of labels from these
      Binding resources to the Pods which are their subject. Use of this policy may require removal of the
      Binding resourceFilter in Kyverno's ConfigMap.
spec:
  rules:
    - name: copy-schematic-labels-to-pod
      match:
        any:
          - resources:
              selector:
                matchLabels:
                  upgrade.cattle.io/plan: "talos"
              kinds:
                - 'Pod'
      context:
        - name: schematic_labels
          apiCall:
            urlPath: "/api/v1/nodes/{{request.object.metadata.labels.\"upgrade.cattle.io/node\"}}"
            jmesPath: "metadata.labels|items(@, 'key','value')[?pattern_match('factory.talos.dev/*', key)]|object_from_lists([].key, [].value)"
      mutate:
        patchStrategicMerge:
          metadata:
            labels: "{{ schematic_labels }}"
        # foreach:
        #   - list: request.object.spec.containers[]
        #     patchesJson6902: |-
        #       - op: add
        #         path: /spec/containers/{{elementIndex}}/env/-
        #         value:
        #           name: SCHEMATIC_PREFIX
        #           valueFrom:
        #             fieldRef:
        #               fieldPath: "metadata.labels['factory.talos.dev/schematic-prefix']"
        #       - op: add
        #         path: /spec/containers/{{elementIndex}}/env/-
        #         value:
        #           name: SCHEMATIC_SUFFIX
        #           valueFrom:
        #             fieldRef:
        #               fieldPath: "metadata.labels['factory.talos.dev/schematic-suffix']"
