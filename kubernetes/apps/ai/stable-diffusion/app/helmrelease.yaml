# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.2.1/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app stable-diffusion
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  values:
    controllers:
      *app :
        type: statefulset
        containers:
          *app :
            image:
              repository: ghcr.io/gabe565/stable-diffusion/webui
              tag: 1.9.4@sha256:dad9f06132d2b4569664f6aff0a0d7c6b832654ace1d1a435bbfbbc7fc7621ce
              pullPolicy: IfNotPresent
            args:
              - --xformers
              - --skip-torch-cuda-test
              - --precision full
              - --no-half
              - --api
            env:
              TZ: ${TIMEZONE}
              IIB_ACCESS_CONTROL_ALLOWED_PATHS: /app/outputs
            resources:
              limits:
                memory: "14Gi"
                gpu.intel.com/i915: "1"
            probes:
              startup:
                enabled: true
                spec:
                  failureThreshold: 90
                  periodSeconds: 5
              liveness:
                enabled: true
              readiness:
                enabled: true
        pod:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: intel.feature.node.kubernetes.io/gpu
                        operator: In
                        values:
                          - "true"
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"

    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch

    service:
      *app :
        controller: *app
        ports:
          http:
            port: &port 7860

    ingress:
      *app :
        className: nginx-external
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          auth.home.arpa/enabled: "true"
        hosts:
          - host: &host stable-diffusion.${EXTERNAL_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: *app
                  port: *port
        tls:
          - secretName: stable-diffusion-tls-external
            hosts:
              - *host

    persistence:
      data:
        existingClaim: ${VOLSYNC_CLAIM}
        globalMounts:
          - path: /data
          - path: /app/repositories
            subPath: repositories
      outputs:
        type: custom
        volumeSpec:
          nfs:
            server: "${SYNOLOGY_ADDR}"
            path: /volume1/cloudnative1/stable-diffusion
            
        globalMounts:
          - path: /app/outputs

      intel-gpu:
        type: configMap
        name: stable-diffusion-intel-gpu-script
        globalMounts:
          - path: /app/scripts/openvino-accelerate.py
            subPath: openvino-accelerate.py

      tmp:
        type: emptyDir
