---
apiVersion: v1
kind: Endpoints
metadata:
  name: synology
subsets:
  - addresses:
    - ip: ${SYNOLOGY_ADDR}
    ports:
    - port: 5001
---
apiVersion: v1
kind: Service
metadata:
  name: synology
spec:
 ports:
   - name: http
     port: 5001
     protocol: TCP
     targetPort: 5001
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    auth.home.arpa/enabled: "true"
    internal-dns.home.arpa/disabled: "true"
    hajimari.io/enable: "true"
    hajimari.io/icon: "simple-icons:synology"
  labels:
    app.kubernetes.io/name: &app synology
    app.kubernetes.io/instance: *app
  name: synology-external
  namespace: network
spec:
  ingressClassName: nginx-external
  rules:
  - host: nas.${EXTERNAL_DOMAIN}
    http:
      paths:
      - backend:
          service:
            name: synology
            port:
              number: 5001
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - nas.${EXTERNAL_DOMAIN}
    secretName: synology-tls-external
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  labels:
    app.kubernetes.io/name: &app synology
    app.kubernetes.io/instance: *app
  name: synology-internal
spec:
  ingressClassName: nginx-internal
  rules:
  - host: &host nas.${EXTERNAL_DOMAIN}
    http:
      paths:
      - backend:
          service:
            name: *app
            port:
              number: 5001
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - *host
    secretName: synology-tls-external
