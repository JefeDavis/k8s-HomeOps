---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: overseerr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 30m
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/sct/overseerr
      tag: 1.33.2

    env:
      LOG_LEVEL: "info"
      PORT: &port 5055

    initContainers:
      config-setup:
        image: ghcr.io/onedr0p/alpine:3.19.0@sha256:51632d23e56ae28a34f8e90df6fe8d02730b5462697ae52e8b01ad6484497819
        command:
          - "/bin/bash"
          - -c
          - |
            envsubst < /tmp/config-template/settings.json > /tmp/settings-resolved.json
            if [ -s /config/settings.json ]
            then
              cp /tmp/settings-resolved.json /config/settings.json
              # jq -s '.[0] * .[1]' /config/settings.json /tmp/settings-resolved.json | jq > /config/settings.json
            else
              cp /tmp/settings-resolved.json /config/settings.json
            fi
            exit 0
        envFrom:
          - secretRef:
              name: overseerr-secret
          - secretRef:
              name: starr-apps-secret
          - secretRef:
              name: plex-secret
        env:
          - name: ORGANIZATION
            value: ${ORGANIZATION}
          - name: EXTERNAL_DOMAIN
            value: ${EXTERNAL_DOMAIN}
        volumeMounts:
          - name: config-template
            mountPath: /tmp/config-template
          - name: config
            mountPath: /config

    sidecars:
      exporter:
        name: exporter
        image: ghcr.io/willfantom/overseerr-exporter:1.2.1
        args:
          - --overseerr.address
          - "http://localhost:5055"
          - --overseerr.api-key
          - "$(OVERSEERR_API_KEY)"
        envFrom:
          - secretRef:
              name: overseerr-secret

        ports:
          - name: metrics
            containerPort: &metricsPort 9850
        volumeMounts:
          - name: config
            mountPath: /config
            readOnly: true

    service:
      main:
        ports:
          http:
            port: *port
      metrics:
        ports:
          metrics:
            port: *metricsPort

    ingress:
      main:
        enabled: true
        ingressClassName: nginx-external
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          theme.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:eye-circle-outline"
        hosts:
          - host: &host "request.${EXTERNAL_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: overseerr-tls-external

    persistence:
      config-template:
        enabled: true
        type: configMap
        name: overseerr-config-template
        readOnly: true
        mountPath: "-"

    volumeClaimTemplates:
      - name: config
        mountPath: /app/config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: ceph-block

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups:
        - 65539

    resources:
      requests:
        memory: 350Mi
        cpu: 5m
      limits:
        memory: 431Mi

    serviceMonitor:
      metrics:
        enabled: true
        serviceName: overseerr-metrics
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 10m
            scrapeTimeout: 2m
