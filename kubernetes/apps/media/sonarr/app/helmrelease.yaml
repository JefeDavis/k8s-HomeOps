---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      *app :
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          *app :
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.4.1699@sha256:944d35fab9e0efbc87976750e031d22f641d1a8a099f26e410cff029502577d6
            env:
              TZ: ${TIMEZONE}
              SONARR__INSTANCE_NAME: Sonarr
              SONARR__PORT: &port 8989
              SONARR__APPLICATION_URL: https://sonarr.${EXTERNAL_DOMAIN}
              SONARR__LOG_LEVEL: info
              SONARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: starr-apps-secret
                    key: SONARR_API_KEY
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
            resources:
              requests:
                memory: 350Mi
                cpu: 5m
              limits:
                memory: 431Mi

          exporter:
            image: 
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.0.1
            args: 
              - sonarr
              - --enable-additional-metrics
            env:
              - name: URL
                value: "http://localhost"
              - name: CONFIG
                value: "/config/config.xml"
              - name: PORT
                value: &metricsPort 9707
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      *app :
        controller: *app
        ports:
          http:
            port: *port
            primary: true
          metrics:
            port: *metricsPort

    ingress:
      external:
        className: nginx-external
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          theme.home.arpa/enabled: "true"
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:television-classic"
        hosts:
          - host: &host sonarr.${EXTERNAL_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: *app
                  port: *port
        tls:
          - hosts:
              - *host
            secretName: sonarr-tls-external
                
    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}
        globalMounts:
          - path: /config

      media:
        existingClaim: nfs-media
        advancedMounts:
          *app :
            *app :
              - path: /media

      backups:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${SYNOLOGY_ADDR}"
            path: /volume1/backups/sonarr
        advancedMounts:
          *app :
            *app :
              - path: /config/Backups

      tmp:
        type: emptyDir
        advancedMounts:
          *app :
            *app :
              - path: /tmp

    serviceMonitor:
      metrics:
        enabled: true
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 10m
            scrapeTimeout: 10s
