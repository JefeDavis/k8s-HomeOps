---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
  namespace: security
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: 2024.4.2
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
      interval: 30m
  values:
    global:
      storageClass: ceph-block
      image:
        repository: ghcr.io/goauthentik/server
      volumes:
        - configMap:
            name: authentik-branding
          name: branding
      volumeMounts:
        - mountPath: /media/branding
          name: branding
      envFrom:
        - secretRef:
            name: authentik-secret
      env:
        - name: AUTHENTIK_POSTGRESQL__NAME
          valueFrom:
            secretKeyRef:
              name: pg-authentik-app
              key: username
        - name: AUTHENTIK_POSTGRESQL__USER
          valueFrom:
            secretKeyRef:
              name: pg-authentik-app
              key: username
        - name: AUTHENTIK_POSTGRESQL__PASSWORD
          valueFrom:
            secretKeyRef:
              name: pg-authentik-app
              key: password

    authentik:
      security_key: ""
      avatars: "gravatar,initials"
      log_level: debug
      error_reporting:
        enabled: false
        send_pii: false
      postgresql:
        host: pg-authentik-rw
        port: 5432
        name: ""
        user: ""
        password: ""
      email:
        host: "smtp-relay.network.svc.cluster.local"
        port: 2525
        use_tls: false
        from: "authentik@${EXTERNAL_DOMAIN}"

    geoip:
      enabled: true
      accountId: "878850"
      licenseKey: ${SECRET_MAXMIND_LICENSE_KEY}

    server:
      ingress:
        enabled: true
        ingressClassName: nginx-external
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          hajimari.io/enable: "true"
          hajimari.io/icon: "material-symbols:security-rounded"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
          nginx.org/websocket-services: authentik
          nginx.ingress.kubernetes.io/enable-global-auth: "false"
        hosts:
          - auth.${EXTERNAL_DOMAIN}
        paths:
          - /
        tls:
          - hosts:
            - auth.${EXTERNAL_DOMAIN}
            secretName: authentik-tls-external
      metrics:
        metrics:
          enabled: true
        serviceMonitor:
          enabled: true

    redis:
      enabled: true
      master:
        securityContext:
          enabled: true

    prometheus:
      rules:
        enabled: true
