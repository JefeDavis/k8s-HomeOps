---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: apply-ingress-auth-annotations
  annotations:
    policies.kyverno.io/title: Apply Ingress Auth Annotations
    policies.kyverno.io/category: Authentik
    policies.kyverno.io/subject: Ingress
    policies.kyverno.io/severity: low
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/description: >-
      This policy creates auth annotations on ingresses. When
      the `auth.home.arpa/enabled` annotation is `true` it
      applies the nginx auth annotations for use with Authentik.
spec:
  mutateExistingOnPolicyUpdate: true
  rules:
    - name: auth
      context:
        - name: appUrl
          variable:
            jmesPath: request.object.spec.rules[0].host
      match:
        any:
          - resources:
              kinds: ["Ingress"]
              annotations:
                auth.home.arpa/enabled: "true"
      mutate:
        targets:
          - apiVersion: networking.k8s.io/v1
            kind: Ingress
            name: "{{ request.object.metadata.name }}"
            namespace: "{{ request.object.metadata.namespace }}"
        patchStrategicMerge:
          metadata:
            annotations:
              nginx.ingress.kubernetes.io/auth-url: |-
                http://ak-outpost-${ORGANIZATION}-outpost.security.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
              nginx.ingress.kubernetes.io/auth-signin: |-
                https://{{ appUrl }}/outpost.goauthentik.io/start?rd=$escaped_request_uri
              nginx.ingress.kubernetes.io/auth-response-headers: |-
                Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
              nginx.ingress.kubernetes.io/auth-snippet: |
                proxy_set_header X-Forwarded-Host $http_host;
