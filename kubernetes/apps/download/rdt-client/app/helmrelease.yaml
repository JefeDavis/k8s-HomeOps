---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app rdt-client
  namespace: download
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      *app :
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main: 
            image:
              repository: rogerfar/rdtclient 
              tag: 2.0.78
            env:
              TZ: ${TIMEZONE}
              PUID: 911
              PGID: 1001
            resources:
              requests:
                cpu: 49m
                memory: 765M

    defaultPodOptions:
      dnsConfig:
        options:
          - name: ndots
            value: "1"

      hostname: rdt

      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch

    service:
      *app :
        controller: *app
        ports:
          http:
            port: 6500

    ingress:
      main:
        enabled: true
        className: nginx-external
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          theme.home.arpa/enabled: "true"
          theme.home.arpa/theme: "nord"
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:download-circle-outline"
        hosts:
          - host: &host "rdt.${EXTERNAL_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: *app
        tls:
          - hosts:
              - *host
            secretName: rdt-client-tls-external

    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}
        globalMounts:
          - path: /data
      
      media:
        type: custom
        volumeSpec:
          nfs:
            server: "${SYNOLOGY_ADDR}"
            path: /volume1/media/downloads
        globalMounts:
          - path: /data/downloads

