---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: prowlarr
  namespace: download
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 30m
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: ghcr.io/onedr0p/prowlarr-develop
      tag: 1.12.1.4201@sha256:03a54ef60ba8d60b3457eb2a467fa6fab6dca2c06b6e5aacf997e30f613b2b12

    env:
      TZ: America/New_York
      PROWLARR__INSTANCE_NAME: Prowlarr
      PROWLARR__PORT: &port 9696
      PROWLARR__AUTHENTICATION_METHOD: External
      PROWLARR__APPLICATION_URL: "https://prowlarr.${EXTERNAL_DOMAIN}"
      PROWLARR__LOG_LEVEL: info
      PROWLARR__API_KEY:
        valueFrom:
          secretKeyRef:
            name: starr-apps-secret
            key: PROWLARR_API_KEY

    sidecars:
      exporter:
        name: exporter
        image: ghcr.io/onedr0p/exportarr:v1.6.0
        args: ["prowlarr"]
        env:
          - name: URL
            value: "http://localhost"
          - name: CONFIG
            value: "/config/config.xml"
          - name: PORT
            value: &metricsPort 9710
          - name: ENABLE_ADDITIONAL_METRICS
            value: true
          - name: ENABLE_UNKNOWN_QUEUE_ITEMS
            value: false
        ports:
          - name: metrics
            containerPort: *metricsPort 
        volumeMounts:
          - name: config
            mountPath: /config
            readOnly: true

    service:
      main:
        ports:
          http:
            port: *port
      metrics:
        ports:
          metrics:
            port: *metricsPort

    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /ping
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false

    ingress:
      main:
        enabled: true
        ingressClassName: nginx-external
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          theme.home.arpa/enabled: "true"
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:movie-search"
        hosts:
          - host: &host prowlarr.${EXTERNAL_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: prowlarr-tls-external

    persistence:
      backups:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${SYNOLOGY_ADDR}"
            path: /volume1/backups/prowlarr
        mountPath: /config/Backups
        readOnly: false

    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: ceph-block

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups:
        - 65539

    resources:
      requests:
        memory: 350Mi
        cpu: 5m
      limits:
        memory: 431Mi

    serviceMonitor:
      metrics:
        enabled: true
        serviceName: prowlarr-metrics
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 10m
            scrapeTimeout: 2m
