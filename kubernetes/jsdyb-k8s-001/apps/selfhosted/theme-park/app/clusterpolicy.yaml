apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: themepark-skin
  annotations:
    policies.kyverno.io/title: ThemePark Skin
    policies.kyverno.io/category: Theme-Park
    policies.kyverno.io/subject: Ingress
    policies.kyverno.io/severity: low
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/description: |
      This policy applies an ingress notation that will apply a theme-park theme.
      You can apply optional annotations on the ingress to adjust the theme:
      - "theme.home.arpa/theme": should match the theme that you want, and will default to catppuccin-macchiato if not specified.
      - "theme.home.arpa/app": should match the application name, to load css for, it will default to the value of app.kubernetes.io/name if not specified.
spec:
  mutateExistingOnPolicyUpdate: true
  rules:
    - name: theme
      context:
        - name: appName
          variable:
            jmesPath: request.object.metadata.labels."theme.home.arpa/app" || request.object.metadata.labels."app.kubernetes.io/name"
        - name: theme
          variable:
            jmesPath: request.object.metadata.annotations."theme.home.arpa/theme" || 'catppuccin-macchiato'
      match:
        any:
          - resources:
              kinds: ["Ingress"]
              annotations:
                theme.home.arpa/enabled: "true"
      mutate:
        targets:
          - apiVersion: networking.k8s.io/v1
            kind: Ingress
            name: "{{request.object.metadata.name}}"
            namespace: "{{request.object.metadata.namespace}}"
        patchStrategicMerge:
          metadata:
            annotations:
              nginx.ingress.kubernetes.io/configuration-snippet: |-
                proxy_set_header Accept-Encoding "";
                sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${EXTERNAL_DOMAIN}/css/base/{{ appName }}/{{ theme }}.css"></head>';
                sub_filter_once on;
