---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      *app :
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          *app :
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.41.3.9314-a0bfb8370@sha256:cbefe5f2f44d0519fd72985ed4005b7b55a7eb9dcbdcc3b4d6bb7055730db565
            env:
              TZ: ${TIMEZONE}
              PLEX_ADVERTISE_URL: https://plex.${EXTERNAL_DOMAIN}:443,https://plex.${INTERNAL_DOMAIN}:32400,http://${SVC_PLEX_ADDR}:32400,plex.media.svc.cluster.local:32400
              PLEX_NO_AUTH_NETWORKS: 10.0.0.0/8
              PLEX_PREFERENCE_NAME: "FriendlyName=${ORGANIZATION}"
              PLEX_PREFERENCE_DLNA: "DlnaEnabled=1"
              PLEX_PREFERENCE_GDM: "GdmEnabled=1"
              PLEX_PREFERENCE_GPU: "HardwareAcceleratedCodecs=1"
              PLEX_PREFERENCE_INTERFACE: "PreferredNetworkInterface=eth0"
              PLEX_PREFERENCE_PORT_MAPPING: "ManualPortMappingMode=1"
              PLEX_PREFERENCE_MAPPED_PORT: "ManualPortMappingPort=443"
              PLEX_PREFERENCE_LAN: "LanNetworksBandwidth=10.0.0.0/8"
            envFrom:
              - secretRef:
                  name: plex-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: 1
                memory: 16Gi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 10000]
        seccompProfile: { type: RuntimeDefault }
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: ["ollama"]
                  - key: app.kuberentes.io/component
                    operator: In
                    values: ["backend"]
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"

    service:
      *app :
        controller: *app
        type: LoadBalancer
        annotations:
          external-dns.alpha.kubernetes.io/hostname: plex.${INTERNAL_DOMAIN}
          io.cilium/lb-ipam-ips: ${SVC_PLEX_ADDR}
        ports:
          http:
            port: &port 32400
            primary: true
          dnla-tcp:
            port: 32469
            protocol: TCP
          dnla-udp:
            port: 1900
            protocol: UDP
          bonjour-udp:
            port: 5353
            protocol: UDP
          gdm-1:
            port: 32410
            protocol: UDP
          gdm-2:
            port: 32412
            protocol: UDP
          gdm-3:
            port: 32413
            protocol: UDP
          gdm-4:
            port: 32414
            protocol: UDP

    route:
      *app :
        enabled: true
        kind: HTTPRoute
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:plex"
          hajimari.io/url: "https://plex.${EXTERNAL_DOMAIN}/web"
        parentRefs:
          - kind: Gateway
            name: public-gateway
            namespace: gateway
        hostnames:
          - plex.${EXTERNAL_DOMAIN}
        rules:
          - backendRefs:
              - kind: Service
                name: *app
                port: *port
            matches:
              - path:
                  type: PathPrefix
                  value: /
      
    persistence:
      config1:
        existingClaim: ${VOLSYNC_CLAIM}
        globalMounts:
          - path: /config

      # Separate PVC for cache to avoid backing up cache files
      cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache

      logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs

      media:
        existingClaim: nfs-media

      transcode:
        type: custom
        volumeSpec:
          ephemeral:
            volumeClaimTemplate:
              spec:
                storageClassName: ceph-block
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 500Gi

      tmp:
        type: emptyDir
        sizeLimit: 10Gi

      backup:
        type: custom
        volumeSpec:
          nfs:
            server: "${SYNOLOGY_ADDR}"
            path: /volume1/backups/plex
        globalMounts:
          - path: /config/Backups

