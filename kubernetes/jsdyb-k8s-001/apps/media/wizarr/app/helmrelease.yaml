---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app wizarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      *app :
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          *app :
            image:
              repository: ghcr.io/wizarrrr/wizarr
              tag: 4.2.0
            env:
              TZ: ${TIMEZONE}
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: true
            #   capabilities:
            #     drop:
            #       - ALL
            resources:
              requests:
                memory: 350Mi
                cpu: 10m
              limits:
                memory: 512Mi

    defaultPodOptions:
      securityContext:
        # runAsUser: 568
        # runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      *app :
        controller: *app
        ports:
          http:
            port: &port 5690

    # ingress:
    #   external:
    #     className: nginx-external
    #     annotations:
    #       cert-manager.io/cluster-issuer: letsencrypt-prod
    #       hajimari.io/enable: "true"
    #       hajimari.io/icon: "mdi:invite"
    #     hosts:
    #       - host: &host "join.${EXTERNAL_DOMAIN}"
    #         paths:
    #           - path: /
    #             service:
    #               identifier: *app
    #               port: *port
    #     tls:
    #       - hosts:
    #           - *host
    #         secretName: wizarr-tls-external
      
    route:
      *app :
        enabled: true
        kind: HTTPRoute
        parentRefs:
          - group: gateway.networking.k8s.io
            kind: Gateway
            name: private-gateway
            namespace: network
        hostnames:
          - &host join.${EXTERNAL_DOMAIN}
        rules:
          - backendRefs:
              - name: *app
                kind: Service
                port: *port
            matches:
              - path:
                  type: PathPrefix
                  value: /

    persistence:
      data:
        existingClaim: ${VOLSYNC_CLAIM}
        globalMounts:
          - path: /data/database
