---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app music-assistant
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      *app :
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          *app :
            image:
              repository: ghcr.io/music-assistant/server
              tag: 2.3.6
            env:
              TZ: ${TIMEZONE}
            resources:
              requests:
                cpu: 500m
                memory: 250Mi
              limits:
                memory: 2500Mi

        pod:
          annotations:
            k8s.v1.cni.cncf.io/networks: |
              [{
                "name":"iot-vlan",
                "namespace": "network",
                "ips": ["10.0.90.62/24"],
                "mac": "b2:c8:9e:b6:5f:28",
                "gateway": "10.0.90.1"
              }]

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      *app :
        controller: *app
        ports:
          http:
            port: &port 8095

    route:
      *app :
        enabled: true
        kind: HTTPRoute
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "simple-icons:musicbrainz"
        parentRefs:
          - kind: Gateway
            name: private-gateway
            namespace: network
        hostnames:
          - music.${EXTERNAL_DOMAIN}
        rules:
          - backendRefs:
              - kind: Service
                name: *app
                port: *port
            matches:
              - path:
                  type: PathPrefix
                  value: /
      
    persistence:
      data:
        existingClaim: ${VOLSYNC_CLAIM}
        globalMounts:
          - path: /data
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${SYNOLOGY_ADDR}"
            path: /volume1/media/library/music
        globalMounts:
          - path: /media

