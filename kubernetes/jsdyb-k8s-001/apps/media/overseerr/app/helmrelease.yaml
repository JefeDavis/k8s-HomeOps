---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app overseerr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      *app :
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          *app :
            image:
              repository: ghcr.io/sct/overseerr
              tag: develop@sha256:83a1c0dc7af6af9f1aed44a3500879fd0868c4595e45c52c8042e4cf432ab92d
            env:
              LOG_LEVEL: info
              PORT: &port 5055
              TZ: ${TIMEZONE}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/v1/status
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
            resources:
              requests:
                memory: 350Mi
                cpu: 5m
              limits:
                memory: 431Mi
          # exporter:
          #   image:
          #     repository: ghcr.io/willfantom/overseerr-exporter
          #     tag: 1.2.1
          #   args:
          #     - --overseerr.address
          #     - "http://localhost:5055"
          #     - --overseerr.api-key
          #     - "$(OVERSEERR_API_KEY)"
          #   envFrom:
          #     - secretRef:
          #         name: overseerr-secret
          #   securityContext:
          #     allowPrivilegeEscalation: false
          #     readOnlyRootFilesystem: true
          #     capabilities:
          #       drop:
          #         - ALL
          #   resources:
          #     requests:
          #       cpu: 10m
          #     limits:
          #       memory: 128Mi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      *app :
        controller: *app
        ports:
          http:
            port: *port
            primary: true
          metrics:
            port: 9850

    route:
      *app :
        enabled: true
        kind: HTTPRoute
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:eye-circle-outline"
        parentRefs:
          - kind: Gateway
            name: public-gateway
            namespace: gateway
        hostnames:
          - request.${EXTERNAL_DOMAIN}
        rules:
          - backendRefs:
              - kind: Service
                name: *app
                port: *port
            matches:
              - path:
                  type: PathPrefix
                  value: /
      
    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}
        globalMounts:
          - path: /app/config

      config-template:
        type: configMap
        name: overseerr-config-template
        advancedMounts:
          *app :
            setup:
              - path: /tmp/config-template

      tmp:
        type: emptyDir
        advancedMounts:
          *app :
            *app :
              - path: /tmp
            setup:
              - path: /tmp

    serviceMonitor:
      metrics:
        enabled: true
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 10m
            scrapeTimeout: 10s
