---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ollama
  namespace: ai
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      backend:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: docker.io/ollama/ollama
              tag: 0.6.5
            env:
              TZ: ${TIMEZONE}
              LIBVA_DRIVER_NAME: i965
              OLLAMA_HOST: 0.0.0.0
              OLLAMA_ORIGINS: "*"
              OLLAMA_MODELS: &pvc /models
            resources:
              requests:
                cpu: 500m
                memory: 16Gi
                gpu.intel.com/i915: "2"
              limits:
                memory: 16Gi
                gpu.intel.com/i915: "2"
        pod:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: intel.feature.node.kubernetes.io/gpu
                        operator: In
                        values:
                          - "true"
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
      ui:
        type: deployment
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/open-webui/open-webui
              tag: main
            env:
              WEBUI_NAME: Ollama
              WEBUI_URL: https://ollama.${INTERNAL_DOMAIN}
              DATA_DIR: /data
              OLLAMA_BASE_URL: http://ollama-backend.ai.svc.cluster.local:11434
              WEBUI_AUTH_TRUSTED_EMAIL_HEADER: X-authentik-email
              AUDIO_OPENAI_API_BASE_URL: https://piper.${INTERNAL_DOMAIN}/v1
              AUDIO_OPENAI_API_KEY: sk-111111111111 # fake key needed to make ui happy
              RAG_EMBEDDING_ENGINE: ollama
            resources:
              requests:
                cpu: 200m
                memory: 2Gi
              limits:
                memory: 2Gi

    service:
      backend:
        controller: backend
        ports:
          http:
            port: 11434
      ui:
        controller: ui
        ports:
          http:
            port: &port 8080

    route:
      *app :
        enabled: true
        kind: HTTPRoute
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "simple-icons:ollama"
        parentRefs:
          - kind: Gateway
            name: private-gateway
            namespace: gateway
        hostnames:
          - ollama.${INTERNAL_DOMAIN}
        rules:
          - backendRefs:
              - kind: Service
                name: ollama-ui
                port: *port
            matches:
              - path:
                  type: PathPrefix
                  value: /

    persistence:
      backend-config:
        enabled: true
        existingClaim: ${BACKEND_CLAIM}
        advancedMounts:
          backend: 
            main: 
              - path: /.ollama
      ui-config:
        enabled: true
        existingClaim: ${UI_CLAIM}
        advancedMounts:
          ui: 
            main: 
              - path: /data
      models:
        enabled: true
        existingClaim: ollama-models
        advancedMounts:
          backend: 
            main: 
              - path: *pvc
      tmp:
        enabled: true
        type: emptyDir
        medium: Memory
        globalMounts:
          - path: /tmp
