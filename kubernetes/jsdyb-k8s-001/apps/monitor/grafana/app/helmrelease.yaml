---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      version: 8.8.2
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    # admin:
    #   existingSecret: grafana-admin-secret

    replicas: 1

    env:
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_ANALYTICS_CHECK_FOR_PLUGIN_UPDATES: false
      GF_ANALYTICS_REPORTING_ENABLED: false
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_BASIC_ENABLED: false
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: /tmp/dashboards/home.json
      GF_EXPLORE_ENABLED: true
      GF_FEATURE_TOGGLES_ENABLE: publicDashboards
      GF_LOG_MODE: console
      GF_NEWS_NEWS_FEED_ENABLED: false
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_COOKIE_SAMESITE: grafana
      GF_SERVER_ROOT_URL: https://monitor.${INTERNAL_DOMAIN}

    envFromSecrets:
      - name: grafana-secret

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: storage
            orgId: 1
            folder: Storage
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/storage
          - name: datastore
            orgId: 1
            folder: Datastore
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/datastore
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: network
            orgId: 1
            folder: Network
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/network
          - name: observability
            orgId: 1
            folder: Observability
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/observability
          - name: compute
            orgID: 1
            folder: Compute
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/compute
          - name: gateway
            orgID: 1
            folder: Gateway
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/gateway
          - name: media
            orgID: 1
            folder: Media
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/media
          - name: security
            orgID: 1
            folder: Security
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/security

    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - { name: Alertmanager, orgId: 1 }
          - { name: Loki, orgId: 1 }
          - { name: Prometheus, orgId: 1 }
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            # url: http://thanos-query-frontend.monitor.svc.cluster.local:10902
            url: http://prometheus-operated.monitor.svc.cluster.local:9090
            # jsonData:
            #   prometheusType: Thanos
            #   timeInterval: 1m
            isDefault: true
          - name: Loki
            type: loki
            uid: loki
            access: proxy
            url: http://loki-headless.monitor.svc.cluster.local:3100
            jsonData:
              maxLines: 250
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            access: proxy
            url: http://alertmanager.monitor.svc.cluster.local:9093
            jsonData:
              implementation: prometheus

    dashboards:
      gateway:
        istio-mesh:
          gnetId: 7639
          revision: 239
          datasource: Prometheus
        istio-service:
          gnetId: 7636
          revision: 239
          datasource: Prometheus
        istio-workload:
          gnetId: 7630
          revision: 239
          datasource: Prometheus
        istio-performence:
          gnetId: 11829
          revision: 239
          datasource: Prometheus
        istio-control-plane:
          gnetId: 7645
          revision: 239
          datasource: Prometheus
        istio-wasm:
          gnetId: 13277
          revision: 239
          datasource: Prometheus
      network:
        # renovate: depName="blocky"
        blocky:
          gnetId: 13768
          revision: 4
          datasource:
            - name: "DS_PROMETHEUS"
              value: prometheus
        external-dns:
          # renovate: dashboardName="External-DNS"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        unifi-insights:
          # renovate: dashboardName="UniFi-Poller: Client Insights - Prometheus"
          gnetId: 11315
          revision: 9
          datasource: Prometheus
        unifi-network-sites:
          # renovate: dashboardName="UniFi-Poller: Network Sites - Prometheus"
          gnetId: 11311
          revision: 5
          datasource: Prometheus
        unifi-usw:
          # renovate: dashboardName="UniFi-Poller: USW Insights - Prometheus"
          gnetId: 11312
          revision: 9
          datasource:
            - name: "DS_PROMETHEUS"
              value: Prometheus
        unifi-uap:
          # renovate: dashboardName="UniFi-Poller: UAP Insights - Prometheus"
          gnetId: 11314
          revision: 10
          datasource:
            - name: "DS_PROMETHEUS"
              value: Prometheus

      storage:
        volsync:
          # removate: dashboardName="VolSync Dashboard"
          gnetId: 21356
          revision: 2
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
            - name: VAR_REPLICATIONDESTNAME
              value: ".*-bootstrap"

        ceph-cluster:
          # renovate: dashboardName="Ceph Cluster"
          gnetId: 2842
          revision: 18
          datasource: Prometheus
        ceph-osd:
          # renovate: dashboardName="Ceph - OSD (Single)"
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        ceph-pools:
          # renovate: dashboardName="Ceph - Pools"
          gnetId: 5342
          revision: 9
          datasource: Prometheus
        minio:
          # renovate: depName="MinIO Dashboard"
          gnetId: 13502
          revision: 26
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }

      compute:
        node-exporter-full:
          # renovate: dashboardName="Node Exporter Full"
          gnetId: 1860
          revision: 37
          datasource: Prometheus

      media:
        unpackerr:
          # renovate: depName="Unpackerr"
          gnetId: 18817
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }

      security:
        cert-manager:
          # renovate: depName="Cert-manager-Kubernetes"
          gnetId: 20842
          revision: 3
          datasource: Prometheus

      datastore:
        cloudnative-pg:
          # renovate: dashboardName="CloudNativePG"
          gnetId: 20417
          revision: 3
          datasource: Prometheus

        dragonfly-peer:
          # renovate: dashboardName="Dragonfly / Peer"
          gnetId: 15946
          revision: 7
          datasource: Prometheus
        
        dragonfly-manager:
          # renovate: dashboardName="Dragonfly / Manager"
          gnetId: 15945
          revision: 15
          datasource: Prometheus

        dragonfly-scheduler:
          # renovate: dashboardName="Dragonfly / Scheduler"
          gnetId: 15944
          revision: 15
          datasource: Prometheus

        emqx:
          # renovate: dashboardName="EMQX"
          gnetId: 17446
          revision: 2
          datasource: Prometheus

      default:
        spegel:
          # renovate: dashboardName="Spegel"
          gnetId: 18089
          revision: 1
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

        node-feature-discovery:
          url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
          datasource: Prometheus

      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: Prometheus

      kubernetes:
        k8s-system-api-server:
          # renovate: dashboardName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 17
          datasource: Prometheus
        k8s-views-global:
          # renovate: dashboardName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 42
          datasource: Prometheus
        k8s-views-nodes:
          # renovate: dashboardName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 32
          datasource: Prometheus
        k8s-views-namespaces:
          # renovate: dashboardName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 41
          datasource: Prometheus
        k8s-views-pods:
          # renovate: dashboardName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 34
          datasource: Prometheus
        k8s-volumes:
          # renovate: dashboardName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus

      observability:
        prometheus:
          # renovate: depName="Prometheus"
          gnetId: 19106
          revision: 6
          datasource: Prometheus

    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
      - isovalent-hubble-datasource
    serviceMonitor:
      enabled: true
    ingress:
      enabled: false
    persistence:
      enabled: false
    testFramework:
      enabled: false
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: grafana
    imageRenderer:
      enabled: true

    podAnnotations:
      configmap.reloader.stakater.com/reload: grafana
      secret.reloader.stakater.com/reload: grafana-secrets

    resources:
      limits:
        memory: 219Mi
      requests:
        cpu: 23m
        memory: 127Mi

    sidecar:
      logLevel: INFO
      alerts:
        enabled: true
        label: grafana.io/alert
        labelValue: 'true'
      dashboards:
        enabled: true
        label: grafana.io/dashboard
        labelValue: 'true'
        folderAnnotation: "grafana.io/folder"
        searchNamespace: ALL
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        label: grafana.io/datasource
        labelValue: 'true'
        searchNamespace: ALL
      notifiers:
        enabled: true
        label: grafana.io/notifier
        labelValue: 'true'
        searchNamespace: ALL
      plugins:
        enabled: true
        label: grafana.io/plugin
        labelValue: 'true'
        searchNamespace: ALL
