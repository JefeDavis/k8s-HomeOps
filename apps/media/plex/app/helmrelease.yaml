---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 30m
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: plexinc/pms-docker
      tag: 1.32.0.6973-a787c5a8e
    env:
      TZ: "America/New_York"
      ALLOWED_NETWORKS: "10.0.0.0/8"
      PLEX_PREFERENCE_1: "FriendlyName=plex-davishaus"
      PLEX_PREFERENCE_2: "LanNetworksBandwidth=10.0.0.0/8"
      PLEX_CLAIM:
        valueFrom:
          secretKeyRef:
            name: plex-secret
            key: claimToken    
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
      - 44
      - 109
      - 65539
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: 10.77.1.134
        externalTrafficPolicy: Local
        annotations:
          metallb.universe.tf/allow-shared-ip: plex
        port:
          port: 32400
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: HTTPS
          cert-manager.io/cluster-issuer: letsencrypt-prod
        hosts:
        - host: "plex.davishaus.dev"
          paths:
          - path: /
            pathType: Prefix
        tls:
        - hosts:
          - "plex.davishaus.dev"
          secretName: plex-tls-external
    persistence:
      transcode:
        enabled: true
        type: emptyDir
        sizeLimit: 400Gi
      tmp:
        enabled: true
        type: emptyDir
        sizeLimit: 10Gi
      nfs-media-pvc:
        enabled: true
        existingClaim: nfs-media-pvc
        mountPath: /data
        readOnly: false
    nodeSelector:
      intel.feature.node.kubernetes.io/gpu: "true"
    resources:
      requests:
        gpu.intel.com/i915: 1
        cpu: 500m
        memory: 1500Mi
      limits:
        gpu.intel.com/i915: 1
        memory: 8Gi
      volumeclaimTemplates:
        - name: config
          mountPath: /config
          accessMode: ReadWriteOnce
          size: 35Gi
          storageClass: synology-csi-retain
